(()=>{"use strict";var t={d:(e,n)=>{for(var s in n)t.o(n,s)&&!t.o(e,s)&&Object.defineProperty(e,s,{enumerable:!0,get:n[s]})},o:(t,e)=>Object.prototype.hasOwnProperty.call(t,e),r:t=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})}},e={};t.r(e),t.d(e,{TypeCheck:()=>U,_tc:()=>E,_tcx:()=>x,_typeCheck:()=>K,default:()=>U,typeCheck:()=>U,validType:()=>R});const n={};(()=>{if("undefined"!=typeof window){const t={childList:!0,subtree:!0};new MutationObserver((t=>{for(const e of t)if("childList"===e.type)for(const t in n)n[t]()})).observe(document.body,t)}})();const s=function(){return"kn__"+(new Date).getTime()+"__"+Math.floor(899*Math.random())};function i(t){return null==t||("string"==typeof t||Array.isArray(t)?0===t.length:t instanceof Map||t instanceof Set?0===t.size:ArrayBuffer.isView(t)?0===t.byteLength:"object"==typeof t&&0===Object.keys(t).length)}function r(t){const e=typeof t;switch(t){case null:case void 0:case"":return null;case"0":case 0:return 0;default:if(!("number"!==e&&"string"!==e||"number"!=typeof t&&Number.isNaN(Number(t))))return+t}return null}function o(t,e){if(null===t)return e?null===e||"null"===e:"null";let n;switch(typeof t){case"number":case"string":case"boolean":case"undefined":case"bigint":case"symbol":case"function":n=typeof t;break;case"object":n=Array.isArray(t)?"array":"object";break;default:n="unknown"}return e?e===n:n}function l(t,...e){if(t)return"string"!=typeof t?t:e.reduce(((t,e)=>{const n=e instanceof RegExp?e:new RegExp((s=e)instanceof RegExp?s:s.split("").map((t=>["$","^",".","*","+","?","(",")","[","]","{","}","|","\\"].includes(t)?`\\${t}`:t)).join(""));var s;return t.replace(n,"")}),t).trim()}function u(t,e="[",n="]"){if("string"!=typeof t)return t;const s=t.lastIndexOf(e);if(-1===s)return null;const i=t.substring(s),r=i.indexOf(n);return-1===r?null:i.substring(0,r+1)}function a(t){if(o(t,"object")||o(t,"array"))return t;const e=f(t,"{","}"),n=f(t,"[","]");if(!e&&!n)return t;const l=e?{}:[],y={};let p=function(t){const e=t.match(/^(\[|\{)(.*?)(\]|\})$/);return e?e[2].trim():t}(t);const b=(t=!1)=>{for(;;){let e=t?u(p,"{","}"):u(p);if(!e)break;let n=`__${s()}__`;y[n]=e,p=p.replace(e,n)}};return b(),b(!0),c(p).forEach(((t,n)=>{const s=t.includes(":")&&e,o=s?c(t,":"):[],u=h(function(t,e=null){return null!==r(t)||"boolean"==typeof t?t:i(t)?e:t}(o[0],n));(t=s?o[1]:t)in y&&(t=a(y[t])),t=function(t){const e=r(t);return null!==e?e:t}(h(t)),e?l[u]=t:l.push(t)})),l}function c(t,e=","){if("string"!=typeof t)return t;if(i(t))return[];let n=(t=l(t)).split(e).map((t=>l(t)));return 1===n.length&&""===n[0]?[t]:n}function h(t){return"string"!=typeof t?t:t.replace(/`|'|"/g,"")}function f(t,e=null,n=null){return(!e||t.startsWith(e))&&(!n||t.endsWith(n))}const y=new Map([["array",t=>o(t,"array")],["bigInt",t=>"bigint"==typeof t],["boolean",t=>"boolean"==typeof t],["date",t=>t instanceof Date],["float",t=>"number"==typeof t&&!Number.isInteger(t)],["function",t=>"function"==typeof t],["int",t=>Number.isInteger(t)],["map",t=>t instanceof Map],["null",t=>null===t],["number",t=>"number"==typeof t],["object",t=>o(t,"object")],["promise",t=>t instanceof Promise],["regExp",t=>t instanceof RegExp],["set",t=>t instanceof Set],["string",t=>"string"==typeof t],["symbol",t=>"symbol"==typeof t],["undefined",t=>void 0===t],["weakMap",t=>t instanceof WeakMap],["weakSet",t=>t instanceof WeakSet]]),p=new Map,b=new Map;function g(t){throw new Error(`Type Error: "${t}" is not supported`)}function d(t){if(o(t,"array")||o(t,"object"))return o(t);const e=t.trim();return f(e,"[","]")?"array":f(e,"{","}")?"object":"basic"}const O=t=>new class{constructor(){return this.testUnit=new Map([["tests",new Map],["optionalKeys",[]],["testFew",[]],["testAllAny",!1],["testOnly",!1]]),this.handleObject()}checkOptionalKey(t){return t.endsWith("?")&&(t=t.slice(0,-1),this.testUnit.get("optionalKeys").push(t)),t}checkTheAnyKey(t){if("any"in t){const e=Object.keys(t);1===e.length?this.testUnit.set("testAllAny",!0):this.testUnit.set("testFew",e.filter((t=>"any"!==t)))}}handleObject(){const e=a(t);this.checkTheAnyKey(e);for(const t in e){const n=this.checkOptionalKey(t),s=e[t];"..."!==s?this.testUnit.get("tests").set(n,w(s)):(delete e[t],this.testUnit.set("testOnly",!0))}return this.testUnit}};function w(t){if(p.has(t))return p.get(t);let e=new Map([["testMethod",d(t)],["tests",null]]);switch(e.get("testMethod")){case"basic":e.set("tests",(n=t,b.has(n)?b.get(n):n.split("|").reduce(((t,e)=>{let s=!1,i=e.trim();i.endsWith("?")&&(i=i.slice(0,-1),s=!0);const r=y.get(i)??g(i);return r&&t.push(r),s&&t.push(y.get("null"),y.get("undefined")),b.set(n,t),t}),[])));break;case"array":e.set("tests",(t=>{const e=[];return a(t).forEach((t=>{e.push(w(t))})),e})(t));break;case"object":const s=O(t);e=new Map([...e,...s]);break;default:g(t)}var n;return p.set(t,e),e}const k=[],j=new Map;class m{constructor(t,e){const{testOnly:n,testFew:s,testAllAny:i,optionalKeys:r,tests:o}=[...e.entries()].reduce(((t,[e,n])=>({...t,[e]:n})),{});this.testUnitKeys=[...o.keys()],this.testOnly=n,this.testFew=s,this.testAllAny=i,this.optionalKeys=r,this.testCollection=o,this.inputObject=t}handleUnitTest(){switch(!0){case this.testAllAny:return this.testObjAllAny();case!i(this.testFew):const t=this.testObjFew();return this.filterOutFew(),t&&this.testObjAllAny();case!i(this.optionalKeys):const e=this.testObjOptionalKeys();return this.filterOutOptionalKeys(),e&&this.defaultTest();case!this.testOnly:for(const t in this.inputObject)if(!this.testCollection.has(t))return M(this.inputObject,`Key: "${t}" not found in the test collection, or use the "any" (any:[type]) key test or "..." after the last key in the test collection {key1: type, key2: type, ...} to only test a few keys.`),!1}return this.defaultTest()}filterOutOptionalKeys(){this.testUnitKeys=this.testUnitKeys.filter((t=>!this.optionalKeys.includes(t)))}filterOutFew(){this.inputObject=Object.fromEntries(Object.entries(this.inputObject).filter((([t])=>!this.testFew.includes(t))))}testObjOptionalKeys(){return this.optionalKeys.every((t=>{const e=this.testCollection.get(t),n=this.inputObject[t];return!n||T(n,e)}))}testObjFew(){return this.testFew.every((t=>{const e=this.testCollection.get(t);return T(this.inputObject[t],e)}))}testObjAllAny(){const t=Object.values(this.inputObject);return 0===t.length?T(null,this.testCollection.get("any")):t.every((t=>T(t,this.testCollection.get("any"))))}defaultTest(){return this.testUnitKeys.every((t=>{const e=this.testCollection.get(t);return T(this.inputObject[t],e)}))}}const v=(t,e)=>!!o(t,"object")&&new m(t,e).handleUnitTest();function T(t,e){const n=e.get("testMethod"),s=e.get("tests");switch(n){case"basic":return((t,e)=>e.some((n=>{const s=n(t);return s||M(t,e),s})))(t,s);case"array":return((t,e)=>!(!o(t,"array")||0===t.length)&&e.every(((e,n)=>T(t[n],e))))(t,s);case"object":return v(t,e);default:return!1}}function A(t){if(t){if(j.has(t))return j.get(t);let e=null;switch(typeof t){case"function":e={callback:t};break;case"object":e=t;break;case"string":switch(t){case"log":e={log:!0};break;case"fail":e={fail:!0};break;case"return":e={return:!0};break;case"validOutput":e={validOutput:t}}}return j.set(t,e),e}return{log:!1,fail:!1,return:!1,validOutput:!1,callback:null}}function M(t,e){k.push({value:JSON.stringify(t),tests:JSON.stringify(e),found:o(t)})}const K=(t,e,n)=>new class{constructor(){this.unitTest=w(e),this.testResult=T(t,this.unitTest),this.bool=this.testResult,this.settings=A(n),this.callback=this.settings.callback??null,this.testData={typeExp:e,inputVal:t,inputType:o(t),callback:this.callback,unitTest:this.unitTest,testResult:this.testResult},this.settings.log&&this.log(),this.settings.fail&&this.fail(),this.callback&&this.callback(this.testData)}test(){return this.testResult}log(){return console.log("-------------------------- \n ::: Test Data Info :::"),console.table(this.testData),this}fail(){return this.testResult?this:(this.log(),this.settings?.error&&console.log("\n\n-----\x3e Error Message: ",this.settings.error),function(t){const e=k[k.length-1];throw console.log("\n::::::::::::: Type error or not valid ::::::::::::::"),console.log("Input Value used: ",t),console.log("---\x3e Value Found:",e.found),console.log("---\x3e Test Permormed:",e.tests),k.length=0,new Error(`\n\n---------------------\nTypeCheck Error ---\x3e\n\n The value must not be of type (Type found) = "${e.found}". \n\n The Type used is invalid for value: "${e.value}". \n\n see logged error for details\n---------------------\n\n`)}(t))}return(){return t}},E=(t,e,n={})=>(...s)=>(n={fail:!0,...n},K(s,t,n),e(...s)),x=(t,e,n)=>{let s=A(n);return s={fail:!0,...s},(...n)=>new class{constructor(){return this.args=n,this.testResults=K(n,t,s),this.default()}default(){this.returns=e(...n);const t=s.validOutput??!1;return t&&K(this.returns,t,"fail"),this}log(){return this.testResults.log(),this}fail(){return this.testResults.fail(),this}return(){return this.returns}}},R=(t,e)=>K(t,e).test(),U=(t,e,n=null)=>K(t,e,n).fail();window.TypeCheck=e})();